@using Maestro.Web.Models.Users
@model Maestro.Web.Models.Users.ChangePasswordViewModel
@{
    Layout = "~/Views/Shared/_PublicLayout.cshtml";
    ViewBag.Title = GlobalStrings.Users_ChangePassword_PageTitle;
}

<div class="row">
    <div class="col-md-12">
        <h1 class="page-header-ci">@GlobalStrings.Users_ChangePassword_PageTitle</h1>

        <div class="row">
            <div class="col-md-6 bg-warning warning-message">
                @GlobalStrings.Users_ChangePassword_NotificationMessage
            </div>
        </div>

        <div class="ci-content">
            @using (Html.BeginForm("ChangePassword", "Account", null, FormMethod.Post, new { @class = "ci-change-pwd-form" }))
            {
                <div class="row">
                    <div class="col-xs-2 ci-text">
                        @Html.LabelFor(model => model.Email, new { @class = "strong" })
                    </div>
                    <div class="col-xs-10">
                        @Html.TextBoxFor(model => model.Email)
                        <div class="input-sub-note x-small error-state">
                            @Html.ValidationMessageFor(model => model.Email)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-2 ci-text">
                        @Html.LabelFor(model => model.CurrentPassword, new {@class = "strong"})
                    </div>
                    <div class="col-xs-10">
                        @Html.PasswordFor(model => model.CurrentPassword)

                        <div class="input-sub-note x-small error-state">
                            @Html.ValidationMessageFor(model => model.CurrentPassword)
                        </div>

                        <div class="x-small error-state">
                            @Html.ValidationMessage(ChangePasswordViewModel.IncorrectCredentialsKey)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-2 ci-text">
                        @Html.LabelFor(model => model.NewPassword, new {@class = "strong"})
                    </div>
                    <div class="col-xs-10">
                        @Html.PasswordFor(model => model.NewPassword)

                        <div class="input-sub-note x-small error-state">
                            @Html.ValidationMessageFor(model => model.NewPassword)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-2 ci-text">
                        @Html.LabelFor(model => model.ConfirmNewPassword, new { @class = "strong" })
                    </div>
                    <div class="col-xs-10">
                        @Html.PasswordFor(model => model.ConfirmNewPassword)

                        <div class="input-sub-note x-small error-state">
                            @Html.ValidationMessageFor(model => model.ConfirmNewPassword)
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-6 text-right">
                        <button id="btn-sign-in" type="submit" class="btn btn-primary">@GlobalStrings.Users_ChangePassword_ChangePasswordButtonTitle</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section scripts
{
    @Scripts.Render("~/bundles/js/jqueryval")
}