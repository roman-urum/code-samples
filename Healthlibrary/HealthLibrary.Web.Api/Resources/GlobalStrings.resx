<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnswerSet_NotFoundError" xml:space="preserve">
    <value>Answer set is not found</value>
  </data>
  <data name="BaseScaleAnswerSetDto_HighValue_Bounds" xml:space="preserve">
    <value>High value out of bounds: 0 - 100</value>
  </data>
  <data name="BaseScaleAnswerSetDto_HighValue_Greater" xml:space="preserve">
    <value>High value must be more than low value</value>
  </data>
  <data name="BaseScaleAnswerSetDto_LowValue_Bounds" xml:space="preserve">
    <value>Low value out of bounds: 0 - 100</value>
  </data>
  <data name="BaseScaleAnswerSetDto_LowValue_Low_value_must_be_less_then_high_value" xml:space="preserve">
    <value>Low value must be less then high value</value>
  </data>
  <data name="BaseScaleAnswerSetDto_Name_is_too_long" xml:space="preserve">
    <value>Name is too long. Please, make it shorter than 100 characters</value>
  </data>
  <data name="ErrorCode_InternalServerError" xml:space="preserve">
    <value>Unspecified server error</value>
  </data>
  <data name="ErrorCode_InvalidAccessToken" xml:space="preserve">
    <value>Security token was not provided or invalid</value>
  </data>
  <data name="ErrorCode_InvalidRequest" xml:space="preserve">
    <value>Invalid parameter value(s)</value>
  </data>
  <data name="InvalidAudioExtension_ValidationError" xml:space="preserve">
    <value>{0}: Incorrect audio file extension</value>
  </data>
  <data name="InvalidBase64String_ValidationError" xml:space="preserve">
    <value>The field {0} must be in base-64 string format</value>
  </data>
  <data name="InvalidUrlString_ValidationError" xml:space="preserve">
    <value>The field {0} must contain url string format, which points to mp4, wmv, m4a, mp3, wav, webm, jpg, jpeg, png or pdf file</value>
  </data>
  <data name="MaxLengthAttribute_ValidationError" xml:space="preserve">
    <value>{0} is too long. Please, make it shorter than {1} characters</value>
  </data>
  <data name="Media_ContentTypeIsTooLongError" xml:space="preserve">
    <value>ContentType is too long. Please, make it shorter than 50 characters</value>
  </data>
  <data name="NotEmptyListAttribute_ValidationError" xml:space="preserve">
    <value>At least one element inside {0} is required</value>
  </data>
  <data name="ProgramDayElementDto_Day_ValidationError" xml:space="preserve">
    <value>Day should be a nonnegative number</value>
  </data>
  <data name="ProgramDto_Name_ValidationError" xml:space="preserve">
    <value>Name is too long</value>
  </data>
  <data name="QuestionElement_AnswerChoiceCannotBeUsedError" xml:space="preserve">
    <value>Answer choice specified in AnswerChoiceIds cannot be used for specified answer set</value>
  </data>
  <data name="QuestionElement_AnswerSetCannotBeUsedError" xml:space="preserve">
    <value>Specified answer set cannot be used for this question element</value>
  </data>
  <data name="QuestionElement_Delete_InUseError" xml:space="preserve">
    <value>Question element is used</value>
  </data>
  <data name="QuestionElement_InvalidScaleRange" xml:space="preserve">
    <value>AnswerChoiceIds contains value which not allowed for specified scale answer set</value>
  </data>
  <data name="StringLengthAttribute_ValidationError" xml:space="preserve">
    <value>The field {0} must be a string with a maximum length of {1}</value>
  </data>
  <data name="QuestionElement_NotFoundError" xml:space="preserve">
    <value>Question element is not found</value>
  </data>
  <data name="RecurrenceDto_EndDay_ValidationError" xml:space="preserve">
    <value>EndDay should be a nonnegative number</value>
  </data>
  <data name="RecurrenceDto_EveryDays_ValidationError" xml:space="preserve">
    <value>EveryDays should be grater that 0</value>
  </data>
  <data name="RecurrenceDto_StartDay_ValidationError" xml:space="preserve">
    <value>StartDay should be a nonnegative number</value>
  </data>
  <data name="RequiredAttribute_ValidationError" xml:space="preserve">
    <value>The {0} field is required</value>
  </data>
  <data name="ScaleAnswerSetResult_HighLabelIsRequired" xml:space="preserve">
    <value>High Label is required</value>
  </data>
  <data name="ScaleAnswerSetResult_LowLabelIsRequired" xml:space="preserve">
    <value>Low Label is required</value>
  </data>
  <data name="ScaleAnswerSetResult_MidLabelIsRequired" xml:space="preserve">
    <value>Mid Label is required</value>
  </data>
  <data name="SelectionAnswerSet_AnswerChoiceRequired_ErrorMessage" xml:space="preserve">
    <value>At least one answer is required</value>
  </data>
  <data name="SelectionAnswerSet_Delete_InUseError" xml:space="preserve">
    <value>Selection answer set is used</value>
  </data>
  <data name="SelectionAnswerSet_IncorrectAnswerChoiceId" xml:space="preserve">
    <value>Incorrect selection answer choice id</value>
  </data>
  <data name="SelectionAnswerSet_NotFoundError" xml:space="preserve">
    <value>Selection answer set is not found</value>
  </data>
  <data name="TextMediaElementsName_ValidationError" xml:space="preserve">
    <value>Name  must be a string with a maximum length of 50</value>
  </data>
  <data name="UniqueStringsListAttribute_ValidationError" xml:space="preserve">
    <value>The field {0} contains duplicated items</value>
  </data>
  <data name="SupportedContentTypeAttribute_ValidationError" xml:space="preserve">
    <value>Current content type is not supported (Supported types: video/mp4, audio/mpeg, audio/mpa, audio/mpa-robust, audio/vnd.wave, audio/wav, audio/wave, audio/x-wav, video/webm, audio/webm, image/jpeg, image/png, application/pdf, application/x-pdf, application/x-bzpdf, application/x-gzpdf)</value>
  </data>
  <data name="FileNameAttribute_ValidationError" xml:space="preserve">
    <value>The field {0} shoud contain name with extension from the following list: mp4, m4a, mp3, wav, webm, jpg, jpeg, png, pdf</value>
  </data>
  <data name="NotRequiredIfNotEmptyAttribute_ValidationError" xml:space="preserve">
    <value>{0} is not required due to {1} is not empty</value>
  </data>
  <data name="RequiredIfEmptyAttribute_ValidationError" xml:space="preserve">
    <value>{0} is required due to {1} being empty</value>
  </data>
  <data name="Measurement_NotFoundError" xml:space="preserve">
    <value>Measurement with such identifier doesn't exist</value>
  </data>
  <data name="ScaleAnswerSet_NotFoundError" xml:space="preserve">
    <value>Scale AnswerSet with such identifier doesn't exist</value>
  </data>
  <data name="TextMediaElement_NotFound" xml:space="preserve">
    <value>TextMedia element not found</value>
  </data>
  <data name="GreaterThanAttribute_ValidationError" xml:space="preserve">
    <value>{0} must be greater than {1}</value>
  </data>
  <data name="RangeAttribute_ValidationError" xml:space="preserve">
    <value>The field {0} should be within range {1} - {2}</value>
  </data>
  <data name="GreaterThanOrEqualToAttribute_ValidationError" xml:space="preserve">
    <value>{0} must be greater than or equal to {1}</value>
  </data>
  <data name="Assessment_NotFoundError" xml:space="preserve">
    <value>Assessment with such identifier doesn't exist</value>
  </data>
  <data name="Base64FileSizeAttribute_ValidationError" xml:space="preserve">
    <value>{0}: Size of uploaded file must not exceed {1} Mb</value>
  </data>
  <data name="IANATimeZoneAttribute_ValidationError" xml:space="preserve">
    <value>Valid IANA (Olson) time zone must be specified in the field {0}</value>
  </data>
  <data name="TagsValidationMessage" xml:space="preserve">
    <value>Incorrect tag value. Tags can consist of alphanumeric symbols, dot, dash, underscore.</value>
  </data>
  <data name="MediaRequireGroup_ValidationError" xml:space="preserve">
    <value>You can provide only MediaId or Media at the same time</value>
  </data>
</root>